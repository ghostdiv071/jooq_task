/*
 * This file is generated by jOOQ.
 */
package db.tables.records;


import db.tables.Invoice;

import java.sql.Date;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceRecord extends UpdatableRecordImpl<InvoiceRecord> implements Record3<Integer, Date, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.invoice.id</code>.
     */
    public InvoiceRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.invoice.date</code>.
     */
    public InvoiceRecord setDate(Date value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.date</code>.
     */
    public Date getDate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>public.invoice.organisation_id</code>.
     */
    public InvoiceRecord setOrganisationId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.organisation_id</code>.
     */
    public Long getOrganisationId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Date, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Date, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Invoice.INVOICE.ID;
    }

    @Override
    public Field<Date> field2() {
        return Invoice.INVOICE.DATE;
    }

    @Override
    public Field<Long> field3() {
        return Invoice.INVOICE.ORGANISATION_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Date component2() {
        return getDate();
    }

    @Override
    public Long component3() {
        return getOrganisationId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Date value2() {
        return getDate();
    }

    @Override
    public Long value3() {
        return getOrganisationId();
    }

    @Override
    public InvoiceRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public InvoiceRecord value2(Date value) {
        setDate(value);
        return this;
    }

    @Override
    public InvoiceRecord value3(Long value) {
        setOrganisationId(value);
        return this;
    }

    @Override
    public InvoiceRecord values(Integer value1, Date value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoiceRecord
     */
    public InvoiceRecord() {
        super(Invoice.INVOICE);
    }

    /**
     * Create a detached, initialised InvoiceRecord
     */
    public InvoiceRecord(Integer id, Date date, Long organisationId) {
        super(Invoice.INVOICE);

        setId(id);
        setDate(date);
        setOrganisationId(organisationId);
    }
}
